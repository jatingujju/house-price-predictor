# -*- coding: utf-8 -*-
"""Machine Learning)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UCPcGCdTjX24hQnV3bf_cVEAW6Ajt4L4
"""

import pandas as pd

# Example dataset
data = pd.DataFrame({
    'Area': [1000, 1500, 2000, 2500, 3000],
    'Bedrooms': [2, 3, 3, 4, 4],
    'Price': [300000, 400000, 500000, 600000, 650000]
})
X = data[['Area', 'Bedrooms']]  # features (input columns)
y = data['Price']               # target (output column)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("X_train:\n", X_train)
print("\nX_test:\n", X_test)
print("\ny_train:\n", y_train)
print("\ny_test:\n", y_test)

#import_and_create_model
from sklearn.linear_model import LinearRegression

model = LinearRegression()
#Train model
model.fit(X_train, y_train)
#Make prediction
y_pred = model.predict(X_test)
print("Predicted Price:", y_pred)
print("Actual Price:", y_test.values)

#evaluate model

from sklearn.metrics import mean_absolute_error, mean_squared_error

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print("MAE:", mae)
print("MSE:", mse)

import matplotlib.pyplot as plt

# Only use 'Area' to visualize in 2D
plt.scatter(X_train['Area'], y_train, color='blue', label='Training Data')
plt.scatter(X_test['Area'], y_test, color='green', label='Test Data')
plt.scatter(X_test['Area'], y_pred, color='red', label='Predicted Price')

# Create regression line using Area from full dataset
area_range = pd.DataFrame({'Area': range(1000, 3100, 100), 'Bedrooms': [3]*21})  # Assuming avg 3 bedrooms
price_range = model.predict(area_range)

plt.plot(area_range['Area'], price_range, color='black', linewidth=2, label='Regression Line')

plt.xlabel('Area (sq.ft)')
plt.ylabel('Price')
plt.title('Linear Regression: Area vs Price')
plt.legend()
plt.grid(True)
plt.show()